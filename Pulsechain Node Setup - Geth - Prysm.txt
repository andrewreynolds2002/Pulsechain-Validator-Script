# update apt-get package installer
sudo apt-get update -y && sudo apt-get upgrade -y
sudo apt-get dist-upgrade -y && sudo apt autoremove -y

# install required packages
sudo apt-get install \
apt-transport-https \
ca-certificates \
curl \
gnupg \
git \
ufw \
openssl \
lsb-release


# setup firewall rules for node communications

sudo ufw allow 30303
sudo ufw allow 12000
sudo ufw allow 13000

#monitoring ports: do not expose externally i.e. on public internet via router or VPS provider firewall rules, these are for local access to monitoring
sudo ufw allow 3000
sudo ufw allow 9090

# CHECK Firewall Settings

# to show rules applied
sudo ufw status numbered

# to show firewall status: 
sudo ufw status

# note firewall will be disabled until you run this command: 
sudo ufw enable

# When setting up your network or rounters port forwarding use these settings below
# reference https://docs.prylabs.network/docs/prysm-usage/p2p-host-ip 

# INBOUND
# port 30303 both UDP and TCP forwarding - execution node's listener port
# port 12000 UDP - beacon node peer discovery
# port 13000 TCP - ongoing peer communications

# OUTBOUND
# InternalNodeIP/any both UDP and TCP - allow your node to use random ports for communiction

# LOCAL only for local network access from another computer, do not open to public internet
# port 3000 - grafana monitoring tool
# port 9090 - prometheus monitoring tool




# download and install docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update -y

sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose


# NODE SETUP SECTION

# create a directory for blockchain data and adjust permissions 
sudo mkdir /blockchain
sudo chmod 777 /blockchain
cd /blockchain

# make a directory for your prisim password file
sudo mkdir /blockchain/pw
sudo chmod 777 /blockchain/pw
cd pw
nano pw.txt
# enter your prysm wallet password, hit CRTL+X, hit y, hit enter*
cd ~

# generate an SSL certificate
openssl rand -hex 32 | sudo tee /blockchain/jwt.hex > /dev/null


# run docker for geth node
sudo docker run -d --restart unless-stopped \
--net=host \
--name=execution \
-p 8545:8545 -p 30303:30303 \
-v /blockchain:/blockchain \
registry.gitlab.com/pulsechaincom/go-pulse:latest \
--pulsechain-testnet-v3 \
--authrpc.jwtsecret=/blockchain/jwt.hex \
--authrpc.addr=0.0.0.0 \
--authrpc.vhosts=* \
--datadir=/blockchain/execution-data \
--http \
--metrics \
--metrics.addr 127.0.0.1 


#BEFORE running below commands replace recipient address with one of your own
sudo docker run -d --restart unless-stopped \
--net=host \
--name=consensus \
-p 4000:4000/tcp -p 12000:12000/udp -p 13000:13000/tcp \
-v /blockchain:/blockchain \
registry.gitlab.com/pulsechaincom/prysm-pulse/beacon-chain:latest \
--pulsechain-testnet-v3 \
--jwt-secret=/blockchain/jwt.hex \
--datadir=/blockchain/consensus \
--execution-endpoint=http://127.0.0.1:8551 \
--suggested-fee-recipient=0xa4444df03219f93855cb0fdb08eb69e56344444 \
--checkpoint-sync-url=https://checkpoint.v3.testnet.pulsechain.com \
--genesis-beacon-api-url=https://checkpoint.v3.testnet.pulsechain.com \
--bootstrap-node=enr:-L64QNIt1R1_ou9Aw5ci8gLAsV1TrK2MtWiPNGy21YsTW0HpA86hGowakgk3IVEZNjBOTVdqtXObXyErbEfxEi8Y8Z-CARSHYXR0bmV0c4j__________4RldGgykFuckgYAAAlE__________-CaWSCdjSCaXCEA--2T4lzZWNwMjU2azGhArzEiK-HUz_pnQBn_F8g7sCRKLU4GUocVeq_TX6UlFXIiHN5bmNuZXRzD4N0Y3CCIyiDdWRwgiMo \
--min-sync-peers=1


# download and install command line tool for staking
git clone https://gitlab.com/pulsechaincom/staking-deposit-cli.git

cd ~/staking-deposit-cli

# Install python and run desposit setup
sudo apt install python3-pip

sudo pip3 install -r requirements.txt

sudo python3 setup.py install

sudo ./deposit.sh install

#BEFORE running below commands replace withdrawal address with one of your own
sudo ./deposit.sh new-mnemonic --num_validators=1 --mnemonic_language=english --chain=pulsechain-testnet-v3 --folder=/blockchain/ --eth1_withdrawal_address=0xa4444df03219f93855cb0fdb08eb69e56344444

# run docker validator container
sudo docker run -it -v /blockchain/validator_keys:/keys \
-v /blockchain/pw:/wallet \
--name validator \
registry.gitlab.com/pulsechaincom/prysm-pulse/validator \
accounts import --keys-dir=/keys --wallet-dir=/wallet \
--pulsechain-testnet-v3

# at password prompt enter the prysm wallet password you created earlier 

sudo docker stop -t 180 validator

sudo docker container prune

sudo docker run -d --network=host -v /blockchain/validator_keys:/keys \
-v /blockchain/pw:/wallet \
--name validator \
registry.gitlab.com/pulsechaincom/prysm-pulse/validator --pulsechain-testnet-v3 \
--wallet-dir=/wallet --wallet-password-file=/wallet/pw.txt \
--graffiti yourtext

# set the graffiti to a personalised message for your validator


# auto restarts docker containers so they always run 
sudo docker update --restart always execution

sudo docker update --restart always consensus

sudo docker update --restart always validator

# logs docker outputs
sudo docker logs --follow execution

sudo docker logs --follow consensus

sudo docker logs --follow validator





# MONITORING
# Use the below instructions 
# reference: https://www.coincashew.com/coins/overview-eth/guide-or-how-to-setup-a-validator-on-eth2-mainnet/part-i-installation/monitoring-your-validator-with-grafana-and-prometheus







